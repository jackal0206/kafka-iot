services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "${ZOOKEEPER_PORT:-2181}:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT:-2181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME:-2000}
    healthcheck:
      test: ["CMD", "bash", "-c", "echo srvr | nc localhost ${ZOOKEEPER_PORT:-2181} | grep -q 'Mode: '"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "${KAFKA_PORT:-9092}:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

  mongodb:
    image: mongo:6.0.6
    ports:
      - "${MONGO_PORT:-27017}:27017"

  prometheus:
    image: prom/prometheus:v2.48.1
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: ${PROJECT_NAME:-bigdataproject}-cadvisor-1
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8081:8081"
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - kafka
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "-", "http://localhost:8081/healthz" ]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles:
      - "!test"


  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "${GRAFANA_PORT:-3001}:3000"

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - "${KAFKA_UI_PORT:-8080}:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=${KAFKA_BOOTSTRAP_SERVER}
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"   # UI
      - "6831:6831/udp" # UDP for traces
      - "14268:14268"   # HTTP receiver (OpenTelemetry)

  blackbox:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./prometheus/blackbox.yml:/etc/blackbox_exporter/config.yml